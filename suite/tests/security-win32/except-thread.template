THREAD0: Creating thread 1
Attempting execution of badfunc
#if +PROGRAM_SHEPHERDING : +-security --detect_mode --kill_thread --throw_exception --executable_heap --low --client --thin_client
# SEC_VIO_STOP
# if : --internal_detach_mask
#  STOP
# endif
#endif
#if +PROGRAM_SHEPHERDING : +-security --detect_mode +-kill_thread --throw_exception
# SEC_VIO_THREAD
THREAD0: After running other thread
Attempting execution of badfunc
#  if +PROGRAM_SHEPHERDING : +-security +-kill_thread_max +1
#   SEC_VIO_STOP
#  else
#   SEC_VIO_THREAD
#  endif
# STOP
#endif
#if +PROGRAM_SHEPHERDING : +-security --detect_mode +-throw_exception
# SEC_VIO_EXCEPTION
DATA VIOLATION: Inside first filter eax=0
# if +DUMP_REGISTER_STATE :
 /* Fixme : register state non consisten across different machines */
	exception code = 0xc0000005, ExceptionFlags=0x00000000
	record=00000000, params=2
	PC 0x00423400 tried to read address 0x00423400
	pc=0x00423400 eax=0x00000000
  ContextFlags=0x0001003f 
  Edi=0x00420220 Esi=0x7ffdf000 Ebx=0x00000000 
  
  Eax=0x00000000 
  Ebp=0x0052ffb4 Eip=0x00423400 SegCs=0x0000001b 
  EFlags & 0xFFFF=0x00000202 Esp=0x0052ff34 SegSs=0x00000023 
  <floating point area>
  SegGs=0x00000000 SegFs=0x00000038 SegEs=0x00000023 SegDs=0x00000023
# else
Address match : yes
Exception match : yes
# endif
DATA VIOLATION: Inside first handler
DATA: At statement after 1st try-except
#  if +PROGRAM_SHEPHERDING : +-security +-throw_exception_max +1 +-kill_thread
#    SEC_VIO_THREAD
#  endif
#  if : --throw_exception_max_per_thread +1 --throw_exception_max +1
#    SEC_VIO_EXCEPTION
DATA: Finally!
DATA: Expected execution violation!
#   if +DUMP_REGISTER_STATE :
	exception code = 0xc0000005, ExceptionFlags=0x00000000
	record=00000000, params=2
	PC 0x00423400 tried to read address 0x00423400
	pc=0x00423400 eax=0x00000000
  ContextFlags=0x0001003f 
  Edi=0x0041c020 Esi=0x00000002 Ebx=0x0052ffa4 
  
  Eax=0x00000000 
  Ebp=0x0052ffb4 Eip=0x00423400 SegCs=0x0000001b 
  EFlags & 0xFFFF=0x00000202 Esp=0x0052ff34 SegSs=0x00000023 
  <floating point area>
  SegGs=0x00000000 SegFs=0x0000003b SegEs=0x00000023 SegDs=0x00000023
#   else
Address match : yes
Exception match : yes
#   endif 
DATA: After exception handler
#  endif
#  if +PROGRAM_SHEPHERDING : +-security +-throw_exception_max +1 --kill_thread
#    SEC_VIO_STOP
#    STOP
#  endif
THREAD0: After running other thread
Attempting execution of badfunc
#  if +PROGRAM_SHEPHERDING : +-security +-throw_exception_max +1 +-kill_thread_max +1
#    SEC_VIO_STOP
#    STOP
#  endif
#  if +PROGRAM_SHEPHERDING : +-security +-throw_exception_max +1 +-kill_thread
#    SEC_VIO_THREAD
#    STOP
#  endif
#  SEC_VIO_EXCEPTION
DATA VIOLATION: Inside first filter eax=0
#  ifdef +DUMP_REGISTER_STATE :
	exception code = 0xc0000005, ExceptionFlags=0x00000000
	record=00000000, params=2
	PC 0x00423400 tried to read address 0x00423400
	pc=0x00423400 eax=0x00000000
  ContextFlags=0x0001003f 
  Edi=0x0012eb0c Esi=0x00420220 Ebx=0x7ffdf000 
  
  Eax=0x00000000 
  Ebp=0x0012ff60 Eip=0x00423400 SegCs=0x0000001b 
  EFlags & 0xFFFF=0x00000216 Esp=0x0012fee0 SegSs=0x00000023 
  <floating point area>
  SegGs=0x00000000 SegFs=0x00000038 SegEs=0x00000023 SegDs=0x00000023
#  else
Address match : yes
Exception match : yes
#  endif 
DATA VIOLATION: Inside first handler
DATA: At statement after 1st try-except
#  SEC_VIO_EXCEPTION
DATA: Finally!
DATA: Expected execution violation!
#  if +DUMP_REGISTER_STATE :
	exception code = 0xc0000005, ExceptionFlags=0x00000000
	record=00000000, params=2
	PC 0x00423400 tried to read address 0x00423400
	pc=0x00423400 eax=0x00000000
  ContextFlags=0x0001003f 
  Edi=0x0041c020 Esi=0x00000002 Ebx=0x0012ff50 
  
  Eax=0x00000000 
  Ebp=0x0012ff60 Eip=0x00423400 SegCs=0x0000001b 
  EFlags & 0xFFFF=0x00000206 Esp=0x0012fee0 SegSs=0x00000023 
  <floating point area>
  SegGs=0x00000000 SegFs=0x0000003b SegEs=0x00000023 SegDs=0x00000023
#  else
Address match : yes
Exception match : yes
#  endif 
DATA: After exception handler
THREAD0: After calling more bad code here
# STOP
#endif
#if +PROGRAM_SHEPHERDING : +-security --detect_mode +-throw_exception +-throw_exception_max +1 +-kill_thread +-kill_thread_max +1 --low --client --thin_client
# SEC_VIO_EXCEPTION
# SEC_VIO_THREAD
# SEC_VIO_EXCEPTION
# SEC_VIO_STOP
# STOP
#endif
#if +PROGRAM_SHEPHERDING : +-security +-detect_mode
# SEC_VIO_CONT
#endif
DATA: At statement after exception
DATA: At statement after 1st try-except
DATA: Inside 2nd try
DATA: Finally!
DATA: At statement after 2nd try-finally
DATA: After exception handler
THREAD0: After running other thread
Attempting execution of badfunc
DATA: At statement after exception
DATA: At statement after 1st try-except
DATA: Inside 2nd try
DATA: Finally!
DATA: At statement after 2nd try-finally
DATA: After exception handler
THREAD0: After calling more bad code here
