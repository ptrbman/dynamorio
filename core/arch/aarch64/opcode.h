/* This file was generated by codec.py from codec.txt. */

#ifndef OPCODE_H
#define OPCODE_H 1

/* DR_API EXPORT TOFILE dr_ir_opcodes_aarch64.h */
/* DR_API EXPORT BEGIN */

/****************************************************************************
 * OPCODES
 */
/**
 * @file dr_ir_opcodes_aarch64.h
 * @brief Instruction opcode constants for AArch64.
 */
/** Opcode constants for use in the instr_t data structure. */
enum {
/*   0 */     OP_INVALID,  /* NULL, */ /**< INVALID opcode */
/*   1 */     OP_UNDECODED,  /* NULL, */ /**< UNDECODED opcode */
/*   2 */     OP_CONTD,    /* NULL, */ /**< CONTD opcode */
/*   3 */     OP_LABEL,    /* NULL, */ /**< LABEL opcode */

/*   4 */     OP_add,             /**< AArch64 add opcode.*/
/*   5 */     OP_adds,            /**< AArch64 adds opcode.*/
/*   6 */     OP_adr,             /**< AArch64 adr opcode.*/
/*   7 */     OP_adrp,            /**< AArch64 adrp opcode.*/
/*   8 */     OP_and,             /**< AArch64 and opcode.*/
/*   9 */     OP_ands,            /**< AArch64 ands opcode.*/
/*  10 */     OP_b,               /**< AArch64 b opcode.*/
/*  11 */     OP_bcond,           /**< AArch64 bcond opcode.*/
/*  12 */     OP_bic,             /**< AArch64 bic opcode.*/
/*  13 */     OP_bics,            /**< AArch64 bics opcode.*/
/*  14 */     OP_bl,              /**< AArch64 bl opcode.*/
/*  15 */     OP_blr,             /**< AArch64 blr opcode.*/
/*  16 */     OP_br,              /**< AArch64 br opcode.*/
/*  17 */     OP_brk,             /**< AArch64 brk opcode.*/
/*  18 */     OP_cbnz,            /**< AArch64 cbnz opcode.*/
/*  19 */     OP_cbz,             /**< AArch64 cbz opcode.*/
/*  20 */     OP_eon,             /**< AArch64 eon opcode.*/
/*  21 */     OP_eor,             /**< AArch64 eor opcode.*/
/*  22 */     OP_ldr,             /**< AArch64 ldr opcode.*/
/*  23 */     OP_mrs,             /**< AArch64 mrs opcode.*/
/*  24 */     OP_msr,             /**< AArch64 msr opcode.*/
/*  25 */     OP_nop,             /**< AArch64 nop opcode.*/
/*  26 */     OP_orn,             /**< AArch64 orn opcode.*/
/*  27 */     OP_orr,             /**< AArch64 orr opcode.*/
/*  28 */     OP_ret,             /**< AArch64 ret opcode.*/
/*  29 */     OP_str,             /**< AArch64 str opcode.*/
/*  30 */     OP_strb,            /**< AArch64 strb opcode.*/
/*  31 */     OP_strh,            /**< AArch64 strh opcode.*/
/*  32 */     OP_sub,             /**< AArch64 sub opcode.*/
/*  33 */     OP_subs,            /**< AArch64 subs opcode.*/
/*  34 */     OP_svc,             /**< AArch64 svc opcode.*/
/*  35 */     OP_tbnz,            /**< AArch64 tbnz opcode.*/
/*  36 */     OP_tbz,             /**< AArch64 tbz opcode.*/

    OP_xx, /* placeholder for undecoded instructions */

    OP_AFTER_LAST,
    OP_FIRST = OP_LABEL + 1,      /**< First real opcode. */
    OP_LAST  = OP_AFTER_LAST - 1, /**< Last real opcode. */
};

/* alternative names */
#define OP_jmp       OP_b      /**< Platform-independent opcode name for jump. */
#define OP_jmp_short OP_b      /**< Platform-independent opcode name for short jump. */
#define OP_load      OP_ldr    /**< Platform-independent opcode name for load. */
#define OP_store     OP_str    /**< Platform-independent opcode name for store. */

/****************************************************************************/
/* DR_API EXPORT END */

#endif /* OPCODE_H */
